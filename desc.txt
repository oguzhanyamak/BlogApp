Blog App:
EP 1:
Temel olarak ASP.Net Core MVC projesidir.
.Net 5.0 ile geliþtirilecek olan bu proje temellerinde N-Tier Architecture kullanýlacaktýr
Veri tabaný olarak MS-Sql kullanýlacak olup Docker üzerinden ayaða kaldýrýlacaktýr.
Sql server yönetimi için DBeaver kullanýlacaktýr.
ORM(Object Relational Mapping) olarak Entity FrameWork kullanýlacaktýr.
-------------------------------------------------------------------------------
docker pull mcr.microsoft.com/mssql/server:2019-latest
docker run --name sql_server -e 'ACCEPT_EULA=Y' -e 'MSSQL_SA_PASSWORD=123456Abc' -p 1401:1433 -d mcr.microsoft.com/mssql/server:2019-latest
--------------------------------------------------------------------------------
EP 2:
N-Tier Architecture
	*Entity Layer
		Makale		Kategori		Yorum		Yazar		Hakkýnda		Ýletiþim		Adres
	*Data Acces Layer
	*Business Layer
	*Presentation Layer
	*Core Layer
	*Api
Entity FrameWork için gerekli Paketlerin yüklenmesi
	Microsoft.EntityFramewworkCore
	Microsoft.EntityFramewworkCore.Desing
	Microsoft.EntityFramewworkCore.SqlServer
	Microsoft.EntityFramewworkCore.Tools
-----------------------------------------------------------------------------------
EP 3 :
Connection string AppSettings.json dosyasýna eklenmiþtir.
DbContext sýnýfý oluþturulmuþ ve tanýmlanmýþtýr.
Projede bulunan entitylerin validation iþlemleri FluentValidation ile  gerçekleþtirilmiþtir.
Deneme amaçlý Migration ve reflection yapýlarak baðlantý ve yapýlanlar kontrol edildi.
-----------------------------------------------------------------------------------
EP 4 :
w3layouts üzerinden alýnan hazýr þablon uygulama arayüzü için uygun hale getirildi
Gerekli css, js ve fontlar dahil edildi.
Header ve footer bölünerek partial view haline getirildi
IBlogService ve BlogManager sýnýflarý üzerinden veri tabaný ve arayüz iliþkileri test edildi.
-----------------------------------------------------------------------------------
Ýliþkisel tablolarda çalýþýrken EfCore özelinde listemele yapýlýrken method Include olarak bildirilerek yazýlmalýdýr.
-----------------------------------------------------------------------------------
EP 5:
Listenen Bloglarýn altýnda bulunan yorum kýsýmlarý view component olarak eklenmiþtir.
ayný zamanda category kýsmý da veri tabanýna baðlý þekilde gelmektedir.
veri tabaný ve category kýsmý için ViewComponent yapýsý kullanýlmýþtýr.
ViewComponent yapýsý esasýnda PartialView ile ayný amaca hizmet etmektedir lakin teknik anlamda farklar bulunmaktadýr.
ViewComponent'lar Shared/Components/ComponentAdý(Personeller)/default.cshtml
ViewComponents/PersonellerViewComponents.cs
@await Component.InvokeAsync("Personeller");
https://miro.com/app/board/uXjVOsBeZTE=/?share_link_id=848986511297
-----------------------------------------------------------------------------------
EP 6 :
Kayýt ekranýnýn basit olarak hazýrlanýp ayarlanmasý.
FluentValidasyon ile bazý kontrollerin saðlanmasý gerçekleþmiþtir.
Business/FluentValidation.AspNetCore
UI/FluentValidation & FluentValidation.AspNetCore
